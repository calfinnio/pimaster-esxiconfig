---
#- name: Check existing NFS mounts
- name: import vars for nfs
  include_vars: nfs-vars.yml
  tags: ["nfs"]

- name: Get NFS volume list to decide which ones need creating
  shell: esxcli --formatter=csv --format-param=fields="Volume Name" storage nfs list | awk 'NR > 1' | sed 's/,//'
  register: nfs_csv
  changed_when: false
  check_mode: false
  tags: ["nfs"]

- name: convert nfs_csv to var
  set_fact:
    nfs_mounts: "{{ nfs_csv.stdout_lines }}"
  tags: ["nfs"]

- name: debug for nfs
  debug:
    msg: "{{ nfs_mounts }}"
  tags: ["nfs"]

#Mount the NFS share from pimaster
- name: Mount NFS
  shell: esxcli storage nfs add --host={{ hostvars['pimaster'].ansible_host }} --share={{ nfs_share_path }} --volume-name={{ nfs_mount_name }}
  tags: ["nfs"]
  when: nfs_mount_name not in nfs_mounts

#VMFS Datastores
- name: Get VMFS extent list to decide which ones need creating
  shell: esxcli --formatter=csv storage vmfs extent list > /tmp/vmfsextents.csv
  tags: ["vmfs"]

- name: Read CSV
  read_csv:
    path: /tmp/vmfsextents.csv
  register: vmfs_extents
  tags: ["vmfs"]

- name: debug here if no extents
  debug:
    msg: "No VMFS extents - creating one..."
  when: vmfs_extents.dict|length < 1
  tags: ["vmfs"]

- name: Include a create VMFS when no extents
  include: "{{ role_path }}/tasks/vmfs.yml"
  when: vmfs_extents.dict|length < 1
  #delegate_to: localhost
  tags: ["vmfs"]

#Recheck VMFS extents
- name: Get VMFS extent list to decide which ones need creating
  shell: esxcli --formatter=csv storage vmfs extent list > /tmp/vmfsextents.csv
  tags: ["vmfs"]

- name: Read CSV
  read_csv:
    path: /tmp/vmfsextents.csv
  register: vmfs_extents
  tags: ["vmfs"]

- name: debug here if no extents
  debug:
    var: "{{ vmfs_extents.dict }}"
  tags: ["vmfs"]

- name: Checking that there is a datastore post creation
  debug:
    msg: "Found datastore"
  when: 
    - vmfs_extents.dict|length != 0
    #- vmfs_name in vmfs_extents.dict 
  #delegate_to: localhost
  tags: ["vmfs"]