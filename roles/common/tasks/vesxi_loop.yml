---
- name: Debug count
  debug:
    msg: "{{ outer_item }}"
    verbosity: 2
  delegate_to: localhost
  tags: ["deploy_vesxi"]

- name: Debug loop index
  debug:
    msg: "{{ ansible_loop.index }}"
    verbosity: 2
  delegate_to: localhost
  tags: ["deploy_vesxi"]

- name: template out deploy.json
  template:
    src: vesxi_api.json.j2
    dest: apivesxi{{ outer_item }}.json
  delegate_to: localhost
  tags: ["deploy_vesxi"]

- name: Setting file path string for deployment later via lookup
  set_fact:
    deploy_json: apivesxi{{ outer_item }}.json
  delegate_to: localhost
  tags: ["deploy_vesxi"]

- name: Debug deploy_json index
  debug:
    msg: "{{ deploy_json }}"
    verbosity: 2
  delegate_to: localhost
  tags: ["deploy_vesxi"]

- name: IP to check
  set_fact:
    current_ip: "{{ vesxi_starting_ip|ipmath(ansible_loop.index0) }}"
  delegate_to: localhost
  tags: ["deploy_vesxi"]

- name: VM name to check
  set_fact:
    current_name: "{{ vesxi_basename }}{{ ansible_loop.index}}"
  delegate_to: localhost
  tags: ["deploy_vesxi"]

- name: Debug current_ip
  debug:
    msg: "{{ current_ip }}"
    verbosity: 3
  delegate_to: localhost
  tags: ["deploy_vesxi"]

- name: Debug ip_results
  debug:
    msg: "{{ ip_results }}"
    verbosity: 3
  delegate_to: localhost
  tags: ["deploy_vesxi"]

- name: Debug current_name
  debug:
    msg: "{{ current_name }}"
    verbosity: 2
  delegate_to: localhost
  tags: ["deploy_vesxi"]

- name: Debug current_vms
  debug:
    msg: "{{ current_vms }}"
    verbosity: 2
  delegate_to: localhost
  tags: ["deploy_vesxi"]

- name: Login into vCenter and get cookies
  uri:
    url: https://{{ vcsa_dns_name }}/rest/com/vmware/cis/session
    force_basic_auth: yes
    validate_certs: no
    method: POST
    user: "{{ vcsa_username }}@{{ vcsa_sso_domain }}"
    password: "{{ esx_password }}"
  register: login2
  delegate_to: localhost
  tags: ["api_calls","host_id"]

- name: set dns string for host
  set_fact:
    dns_string: "{{ current_ip + ' ' + current_name + '.' + vcsa_dns_domain }}"
  tags: ["deploy_vesxi"]

- name: debug dns string
  debug:
    msg: "{{ dns_string }}"
    verbosity: 2
  tags: ["deploy_vesxi"]

- name: Check whether DNS "record" exists
  command: grep -Fxq {{ dns_string }} /etc/dnsmasq_static_hosts.conf
  register: check_dns_record
  check_mode: no
  ignore_errors: yes
  changed_when: no
  delegate_to: localhost
  tags: ["deploy_vesxi"]

- name: Greet the world if DNS "record" exists
  debug: 
    msg: "Hello, world!"
  when: check_dns_record.rc == 0
  delegate_to: localhost
  tags: ["deploy_vesxi"]
  
- name: Deploy Library Item via api
  uri:
    url: https://{{ vcsa_ip_addr }}/rest/com/vmware/vcenter/ovf/library-item/id:{{ content_lib_item_id[0] }}?~action=deploy
    force_basic_auth: yes
    return_content: yes
    validate_certs: no
    headers:
      Cookie: "{{ login2.set_cookie }}"
    body_format: json
    #body: "{{ lookup('file', 'api1.json') }}"
    src: "{{ deploy_json }}"
    timeout: 999
    method: POST
  when: current_name not in current_vms
  delegate_to: localhost
  tags: ["api_calls","deploy_vesxi"]
#  https://{{vc}}/rest/com/vmware/vcenter/ovf/library-item/id:fc0c8c96-6969-46b3-86d0-ec7655852e78?~action=deploy

#- name: Deploy vesxi{{ outer_item }}
#  shell: govc library.deploy -dc={{ vcsa_dc_name }} /{{ content_library_name }}/{{ vesxi_ovf_name }} -options vesxi{{ outer_item }}.json
#  environment:
#    GOPATH: "{{ go_path }}"
#    PATH: "{{ go_bin }}"
#    GOVC_INSECURE: 1
#    GOVC_URL: "{{ vcsa_dns_name }}"
#    GOVC_USERNAME: "{{ vcsa_username }}@{{ vcsa_sso_domain }}"
#    GOVC_PASSWORD: "{{ esx_password }}"
#    GOVC_RESOURCE_POOL: "*/Resources"
#  when: current_name not in current_vms
#  delegate_to: localhost
#  tags: ["deploy_vesxi"]

- name: Check powerstate of vesxi{{ outer_item }}
  shell: govc vm.info -json vesxi{{ outer_item }} | /usr/bin/jq .VirtualMachines[].Runtime.PowerState | /bin/sed 's/["\]//g'
  environment:
    GOPATH: "{{ go_path }}"
    PATH: "{{ go_bin }}"
    GOVC_INSECURE: 1
    GOVC_URL: "{{ vcsa_dns_name }}"
    GOVC_USERNAME: "{{ vcsa_username }}@{{ vcsa_sso_domain }}"
    GOVC_PASSWORD: "{{ esx_password }}"
    GOVC_RESOURCE_POOL: "*/Resources"
  delegate_to: localhost
  register: vm_powerstate
  tags: ["deploy_vesxi"]

- name: Debug vm powerstate
  debug:
    msg: "{{ vm_powerstate }}"
    verbosity: 2
  delegate_to: localhost
  tags: ["deploy_vesxi"]

- name: PowerOn  vesxi{{ outer_item }}
  shell: govc vm.power -on {{ vesxi_basename }}{{ ansible_loop.index}}
  environment:
    GOPATH: "{{ go_path }}"
    PATH: "{{ go_bin }}"
    GOVC_INSECURE: 1
    GOVC_URL: "{{ vcsa_dns_name }}"
    GOVC_USERNAME: "{{ vcsa_username }}@{{ vcsa_sso_domain }}"
    GOVC_PASSWORD: "{{ esx_password }}"
    GOVC_RESOURCE_POOL: "*/Resources"
  delegate_to: localhost
  when: vm_powerstate.stdout != "poweredOn"
  tags: ["deploy_vesxi"]
#not in ip_results


#- name: Copy using inline content to second file
# # copy:
#  #  content: |
#   #   ip_address={{ item }}
#    #dest: /etc/some_other_config_file.conf