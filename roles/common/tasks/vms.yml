---
- name: Include secrets
  include_vars: 
    file: secrets_physical_esx.yml
  tags: ["vms"]

- name: import vars for nfs
  include_vars: nfs-vars.yml
  tags: ["vms"]

- name: Hacky fix for VM creation - generate guid
  shell: dbus-uuidgen | cut -c 1-12
  register: guid
  delegate_to: localhost
  tags: ["vms"]
  
- name: deploy VCSA
  shell: govc vm.create {{ guid }}
  environment:
    GOPATH: "{{ go_path }}"
    PATH: "{{ go_bin }}"
    GOVC_INSECURE: 1
    GOVC_URL: "{{ esx_address }}"
    GOVC_USERNAME: "{{ esx_user }}"
    GOVC_PASSWORD: "{{ esx_password }}"
    GOVC_DATASTORE: "{{ default_datastore }}"
    GOVC_NETWORK: "{{ default_portgroup }}"
    GOVC_RESOURCE_POOL: "*/Resources"
  delegate_to: localhost
  tags: ["vms"]

- name: Get VMs
  shell: esxcli --formatter=csv vm process list > /tmp/vms.csv
  tags: ["pre_vms", "vms"]

- name: stat file to check it is not zero
  shell: wc -c /tmp/vms.csv  | awk '{print $1}'
  register: stvm
  tags: ["vms"]

- name: Read CSV
  read_csv:
    path: /tmp/vms.csv
    key: DisplayName
  register: vms
  when: stvm.stdout != "0"
  tags: ["pre_vms", "vms"]

- name: Debug to show VMs
  debug:
    msg: "{{ vms }}"
    verbosity: 2
  tags: ["pre_vms", "vms"]

#- name: Include pfsense VM tasks
#  include_tasks: pfsense.yml
#  when: stvm.stdout == "0"
#  tags: ["pfsense", "vms"]
# date | sed '/^$/d;s/[[:blank:]]//g'