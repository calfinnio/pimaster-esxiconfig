---

- name: Include vcsa vars
  include_vars: vcsa_vars.yml
  tags: ["vcsa_deploy"]

- name: find the OVA file from VCSA ISO
  find:
    paths: /mnt/usb/vcsa_iso/vcsa/
    file_type: "file"
    patterns: "*ova"
  register: find_result_ova
  tags: ["vcsa", "extra_packages"]
- debug:
    var: find_result_ova

- name: deploy VCSA
  shell: govc import.ova -options={{ role_path }}/files/vcsa.json "{{ items.path }}" 
#  shell: govc import.ova -options=vcsa3.json /mnt/usb/vcsa_iso/vcsa/VMware-vCenter-Server-Appliance-6.7.0.40000-14367737_OVF10.ova 
  environment:
    GOPATH: "{{ go_path }}"
    PATH: "{{ go_bin }}"
    GOVC_INSECURE: 1
    GOVC_URL: "{{ esx_address }}"
    GOVC_USERNAME: "{{ esx_user }}"
    GOVC_PASSWORD: "{{ esx_password }}"
    GOVC_DATASTORE: "{{ default_datastore }}"
    GOVC_NETWORK: "{{ default_portgroup }}"
    GOVC_RESOURCE_POOL: "*/Resources"
  async: 3600
  poll: 5
  delegate_to: localhost
  with_items: "{{ find_result_ova.files }}"
  tags: ["vcsa_deploy"]

- name: Wait for ping  to VCSA
  command: /bin/ping -c 1 {{ vcsa_ip_addr }}
  register: result
  retries: 150
  delay: 10
  until: result is not failed
  delegate_to: localhost
  tags: ["vcsa_deploy"]

- name: Pause play until a URL is reachable from this host
  uri:
    url: "http://{{ vcsa_ip_addr }}/ui"
    follow_redirects: all
    method: GET
    validate_certs: no
  register: _result
  until: _result.status == 200
  retries: 720 # 720 * 5 seconds = 1hour (60*60/5)
  delay: 5 # Every 5 seconds
  delegate_to: localhost
  tags: ["vcsa_deploy"]
  