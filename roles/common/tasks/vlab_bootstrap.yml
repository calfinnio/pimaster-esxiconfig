---
- name: Include secrets
  include_vars: 
    file: secrets_physical_esx.yml
  tags: ["vlab-bootstrap"]

- name: Include vcsa connection vars
  include_vars: vcsa_vars.yml
  tags: ["vlab-bootstrap"]

- name: Check env for previous runs
  shell: govc datacenter.info -json | /usr/bin/jq -r .Datacenters[].Name
  environment:
    GOPATH: "{{ go_path }}"
    PATH: "{{ go_bin }}"
    GOVC_INSECURE: 1
    GOVC_URL: "{{ vcsa_dns_name }}"
    GOVC_USERNAME: "{{ vcsa_username }}@{{ vcsa_sso_domain }}"
    GOVC_PASSWORD: "{{ esx_password }}"
    GOVC_RESOURCE_POOL: "*/Resources"
  register: dc_results
  delegate_to: localhost
  tags: ["vlab-bootstrap"]

- name: convert list to var
  set_fact:
    dcresult: "{{ dc_results.stdout }}"
  tags: ['vlab-bootstrap']

- name: debug of govc json return
  debug:
    msg: "{{ dcresult }}"
    verbosity: 2
  tags: ['vlab-bootstrap']

- name: Debug number of elements
  debug:
    msg: "{{ dcresult|length }}"
    verbosity: 2
  tags: ['vlab-bootstrap']

- name: Debug variable dcresult
  debug:
    var:  dcresult
    verbosity: 2
  tags: ['vlab-bootstrap']

- name: Create initial datacenter
  shell: govc datacenter.create {{ vcsa_dc_name }} 
  environment:
    GOPATH: "{{ go_path }}"
    PATH: "{{ go_bin }}"
    GOVC_INSECURE: 1
    GOVC_URL: "{{ vcsa_dns_name }}"
    GOVC_USERNAME: "{{ vcsa_username }}@{{ vcsa_sso_domain }}"
    GOVC_PASSWORD: "{{ esx_password }}"
    GOVC_RESOURCE_POOL: "*/Resources"
  when: dcresult|length == 0 or vcsa_dc_name not in dcresult
  delegate_to: localhost
  tags: ["vlab-bootstrap"]

#- name: Simple PTR record (IPV4 address) lookup for esx_address
#  debug: 
#    msg: "{{ lookup('dig', esx_address )}}"
#  tags: ["vlab-bootstrap"]
- name: Count hosts in DC
  shell: govc ls /{{ vcsa_dc_name }}/host | /usr/bin/wc -l
  environment:
    GOPATH: "{{ go_path }}"
    PATH: "{{ go_bin }}"
    GOVC_INSECURE: 1
    GOVC_URL: "{{ vcsa_dns_name }}"
    GOVC_USERNAME: "{{ vcsa_username }}@{{ vcsa_sso_domain }}"
    GOVC_PASSWORD: "{{ esx_password }}"
    GOVC_RESOURCE_POOL: "*/Resources"
  register: host_count
  delegate_to: localhost
  tags: ["vlab-bootstrap"]

- name: Debug host count
  debug:
    msg: "{{ host_count }}"
    verbosity: 2
  tags: ["vlab_bootstrap"]

- name: Get Host IPs
  shell: govc host.info -dc={{ vcsa_dc_name }} -json | /usr/bin/jq -r .HostSystems[].Config.Network.Vnic[].Spec.Ip.IpAddress
  environment:
    GOPATH: "{{ go_path }}"
    PATH: "{{ go_bin }}"
    GOVC_INSECURE: 1
    GOVC_URL: "{{ vcsa_dns_name }}"
    GOVC_USERNAME: "{{ vcsa_username }}@{{ vcsa_sso_domain }}"
    GOVC_PASSWORD: "{{ esx_password }}"
    GOVC_RESOURCE_POOL: "*/Resources"
  register: host_results
  delegate_to: localhost
  tags: ["vlab-bootstrap"]

- name: Convert Host list to var
  set_fact:
    hostresult: "{{ host_results.stdout }}"
  tags: ['vlab-bootstrap']

- name: Debug variable
  debug:
    var: hostresult
  tags: ['vlab-bootstrap']

- name: Add physical host to datacenter
  shell: govc host.add -hostname={{ hostvars.esx1.ansible_host }} -password={{ esx_password }} -username={{ esx_user }} -dc={{ vcsa_dc_name }} -noverify=true
  environment:
    GOPATH: "{{ go_path }}"
    PATH: "{{ go_bin }}"
    GOVC_INSECURE: 1
    GOVC_URL: "{{ vcsa_dns_name }}"
    GOVC_USERNAME: "{{ vcsa_username }}@{{ vcsa_sso_domain }}"
    GOVC_PASSWORD: "{{ esx_password }}"
    GOVC_RESOURCE_POOL: "*/Resources"
  when: hostvars.esx1.ansible_host not in hostresult
  delegate_to: localhost
  tags: ["vlab-bootstrap"]
#
#
#govc host.add -hostname=esx1.houseofbears.co.uk -password=VMware1! -username=root -noverify=true
#
#echo | openssl s_client -showcerts -servername download3.vmware.com -connect download3.vmware.com:443 2>/dev/null | openssl x509 -fingerprint -noout -sha1 | awk '{print substr($0,index($0,"=")+1)}'
#
#govc library.create -sub=https://download3.vmware.com/software/vmw-tools/lib.json -ds=General1 -dc=HomeLab -ssl-thumbprint=56:53:D1:6F:CE:B9:C1:C9:25:D5:7F:41:11:DF:7B:00:2C:97:BF:95 vGhettoLib
#

